<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_beta_zombie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

grav = 0;
hsp = 0;
vsp = 0;
attacker_icon = 0;
attacker_gui = 0;
attack_name = 0;

//Define Battle Sprites
full_health = spr_beta_zombie_full_hp;
injured = spr_beta_zombie_injured;
dead = spr_beta_zombie_dead;

///Depth
depth = -1101;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Stats
level = 2; //Current Level

xp_worth = 1

max_hp = 4; //Maximum Health Points
cur_hp = 4; //Current Health Points
str = 1; //Strength Stat
dex = 1; //Dexterity Stat
def = 1; //Defense
agil = 1; //Agility
fear = 0;
spd = 1; //Battle Speed
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Battle Sprite
battle_icon = obj_battle_icon_beta_zombie

battle_icon_spr_width = sprite_get_width(object_get_sprite(battle_icon))
battle_icon_spr_height = sprite_get_height(object_get_sprite(battle_icon))

instance_create(
obj_battle_timer.x-(sprite_get_width(spr_battle_timer)/2)+(battle_icon_spr_width/2),
obj_battle_timer.y-(sprite_get_height(spr_battle_timer)/2)+(battle_icon_spr_height/2),
battle_icon)

battle_icon.initiative = spd
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cur_hp &gt;= (max_hp/2))
{
    sprite_index = full_health;
}

if (cur_hp &lt;= (max_hp/2))
{
    if (cur_hp &gt; 0 )
    {
    sprite_index = injured;
    }
}

if (cur_hp &lt;= 0)
{
    sprite_index = dead;
    instance_deactivate_object(battle_icon)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Getting Attacked
//Must be applied to every single enemy

//When Alsius Uses Slash Attack (In this case, Alsius is the "attacker"
//Must create a sequence for every single attack in the game.
if ( bm_alsius_slash.button_state = 1 )
{
    if ( stop_time = true )
    {
    attacker_icon = obj_alsius_battle_icon //Name the attackers battle icon
    attacker_gui = bm_alsius_gui_bg //Name the gui_bg of the attacker
    attack_name = bm_alsius_slash //Name of the attack
    cur_hp += -1; //In the future put the STR vs DEF script
    attacker_icon.x += (-(sprite_get_width(spr_battle_timer)-(sprite_get_width(spr_battle_icon_alsius)))) //Resets Battle Timer to 0
    stop_time = false //Turns timer back on
    attacker_icon.turn = 0;
    attack_name.button_state = 0; //Resets Variable
    attacker_icon = 0; //Resets Variable
    attacker_gui = 0; //Resets Variable
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
